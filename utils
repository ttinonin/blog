<?php

require __DIR__ . "/vendor/autoload.php";

use Utils\Flags;

use Compiler\Compiler;
use Utils\Environment;
use Utils\Builders\ModelBuilder;
use Utils\Builders\MigrationBuilder;
use Utils\Builders\ControllerBuilder;
use Utils\Builders\MiddlewareBuilder;
use App\Database\Migrations\MigrationsManager;

if(!isset($argv[1])) {
  fwrite(STDERR, "Error: Operation not provided!\n");
  fwrite(STDERR, "Usage: php utils <operation>\n");
  exit(1);
}

function builder($class, $file_name) {
  if(!isset($class)) {
    fwrite(STDERR, "Error: Class to build not provided!\n");
    fwrite(STDERR, "Usage: php utils build:<class_type> <file_name|class_name>\n");
    exit(1);
  }

  if(!isset($file_name)) {
    fwrite(STDERR, "Error: File name not provided!\n");
    fwrite(STDERR, "Usage: php utils build:$class <file_name|class_name>\n");
    exit(1);
  }

  switch($class) {
    case 'middleware':
      MiddlewareBuilder::build($file_name);
      break;
    case 'model':
      ModelBuilder::build($file_name);
      break;
    case 'controller':
      ControllerBuilder::build($file_name);
      break;
    case 'migration':
      MigrationBuilder::build($file_name);
      break;
    default:
      die("\033[31m Error: Build operation not found. \033[0m\n");
      break;
  }
}

function migrate($operation, $manager) {
  switch($operation) {
    case 'run':
      $manager->run();
      break;
    case 'drop':
      $manager->drop();
      break;
    default:
      die("\033[31m Error: Migration operation not found. \033[0m\n");
      break;
  }
}

function get_flags($flags) {
  global $argv;

  foreach($argv as $argument) {
    if(!str_contains($argument, "--")) {
      continue;
    }

    switch($argument) {
      case "--help":
        $flags->help();
        break;
      case "--tokens":
        $flags->tokens();
        break;
      case "--tree":
        $flags->tree();
        break;
      default:
        $flags->add($argument);
        break;
    }
  }
}


function main() {
  $flags = new Flags();

  get_flags($flags);

  Environment::load(__DIR__ . "/.env");

  global $argv;

  $operation = $argv[1];

  $operation = explode(":", $operation);

  switch($operation[0]) {
    case 'migrate':
      $migrations_manager = new MigrationsManager();
      migrate($operation[1], $migrations_manager);
      break;
    case 'build':
      builder($operation[1], $argv[2]);
      break;
    case 'start':
      $host = $flags->get("host") ?? '127.0.0.1';
      $port = $flags->get("port") ?? '8000';
      
      echo "\033[32mStarting development server at http://$host:$port\033[0m\n";
      echo "Press Ctrl+C to stop the server\n";
      
      exec("php -S $host:$port -t public");
      break;
    case 'compile':
      if(!isset($argv[2])) {
        fwrite(STDERR, "Error: File name not provided!\n");
        fwrite(STDERR, "Usage: php utils compile <file_name>\n");
        exit(1);
      }

      $file_name = $argv[2];
      $compiler = new Compiler($flags);
      $compiler->init($file_name);
      break;
    default:
      die("\033[31m Error: Operation not found. \033[0m\n");
      break;
  }
}

main();